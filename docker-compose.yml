version: '3.8'

services:
  www:
    build:
      context: .
      dockerfile: Dockerfile.www
    container_name: php_mysql_crud_www
    ports:
      - "${WEB_PORT}:80"
    volumes:
      - ./php-mysql-crud:/var/www/html
      - ./logs/apache2:/var/log/apache2
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    networks:
      - app-network
    restart: unless-stopped

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: php_mysql_crud_db
    volumes:
      - db_data:/var/lib/mysql
      - ./database/script.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: php_mysql_crud_pma
    ports:
      - "${PMA_PORT}:80"
    environment:
      - PMA_HOST=db
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db_data: